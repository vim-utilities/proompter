
""
" proompter#lib#ConcatenateWithLastLineOfBuffer {{{
Given(One line already present):
  Vim is
Execute(proompter#lib#ConcatenateWithLastLineOfBuffer -- Complete the sentence):
  call proompter#lib#ConcatenateWithLastLineOfBuffer(bufnr('[Vader-workbench]'), ' the best!')
Expect(One line to be finished):
  Vim is the best!

Given(Two lines already present):
  Vim is the best!
  And
Execute(proompter#lib#ConcatenateWithLastLineOfBuffer -- Inserts a new line after appending to existing content):
  call proompter#lib#ConcatenateWithLastLineOfBuffer(bufnr('[Vader-workbench]'), " there is no\ndoubt about it")
Expect(One line to be finished):
  Vim is the best!
  And there is no
  doubt about it

Given(One line with escaped newline already present):
  Vim is the best!\\nAnd
Execute(proompter#lib#ConcatenateWithLastLineOfBuffer -- Does not mess with existing escaped newlines):
  call proompter#lib#ConcatenateWithLastLineOfBuffer(bufnr('[Vader-workbench]'), " there is no\ndoubt about it")
Expect(One line to be finished):
  Vim is the best!\\nAnd there is no
  doubt about it

Given(One line with escaped newline already present):
  Vim is the best!
  And
Execute(proompter#lib#ConcatenateWithLastLineOfBuffer -- Does not mess with escaped newlines from input):
  call proompter#lib#ConcatenateWithLastLineOfBuffer(bufnr('[Vader-workbench]'), " there is no\\ndoubt about it")
Expect(One line to be finished):
  Vim is the best!
  And there is no\ndoubt about it

Given(One line with escaped newline already present):
  Vim is the best!
  And
Execute(proompter#lib#ConcatenateWithLastLineOfBuffer -- Does not mess with escaped newlines from input):
  call proompter#lib#ConcatenateWithLastLineOfBuffer(bufnr('[Vader-workbench]'), " there is no\\ndoubt about it")
  call proompter#lib#ConcatenateWithLastLineOfBuffer(bufnr('[Vader-workbench]'), "\nBecause doubt leads to the dark-side")
Expect(One line to be finished and another to be added):
  Vim is the best!
  And there is no\ndoubt about it
  Because doubt leads to the dark-side
" }}}
""
