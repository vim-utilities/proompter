
""
" {{{
Execute (proompter#callback#channel#StreamToBuffer -- Handles JSON stream with one header):
  let separator = "\r\n"

  let api_response = join([
        \   'HTTP/1.1 200 OK',
        \   'Server: SimpleHTTP/0.6 Python/3.12.6',
        \   'Date: Fri, 20 Sep 2024 23:25:06 GMT',
        \   'Content-Type: application/json',
        \   '',
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:01.01645329Z',
        \     'response': 'V',
        \     'done': v:false,
        \   }),
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:01.177902785Z',
        \     'response': 'im',
        \     'done': v:false,
        \   }),
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:01.341776729Z',
        \     'response': ' is',
        \     'done': v:false,
        \   }),
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:01.506237509Z',
        \     'response': ' the',
        \     'done': v:false,
        \   }),
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:06.675058548Z',
        \     'response': ' best',
        \     'done': v:true,
        \     'done_reason': 'stop',
        \     'total_duration': 7833808817,
        \     'load_duration': 10021098,
        \     'prompt_eval_count': 31,
        \     'prompt_eval_duration': 2122796000,
        \     'eval_count': 35,
        \     'eval_duration': 5658536000,
        \   }),
        \ ], separator)


  let configurations = {
        \   'select': {
        \     'model_name': 'codellama',
        \   },
        \ }

  let expected_configurations = deepcopy(configurations)

  let state = { 'messages': [] }

  let expected_state = {
        \   'messages': [
        \     {
        \       'model': 'codellama',
        \       'created_at': '2024-09-20T23:25:06.675058548Z',
        \       'done': v:true,
        \       'done_reason': 'stop',
        \       'context': v:null,
        \       'message': {
        \         'role': 'assistant',
        \         'content': 'Vim is the best',
        \         'images': v:null,
        \         'tool_calls': v:null,
        \       },
        \     },
        \   ],
        \ }

  call proompter#callback#channel#StreamToBuffer(
        \   api_response,
        \   configurations,
        \   state,
        \   '[Vader-workbench]',
        \ )

  AssertEqual state, expected_state
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'

Execute(proompter#callback#channel#StreamToBuffer -- Handles JSON with newlines):
  let separator = "\r\n"

  let api_response = join([
        \   'HTTP/1.1 200 OK',
        \   'Server: SimpleHTTP/0.6 Python/3.12.6',
        \   'Date: Fri, 20 Sep 2024 23:25:06 GMT',
        \   'Content-Type: application/json',
        \   '',
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:01.01645329Z',
        \     'response': 'Vim is the best!',
        \     'done': v:false,
        \   }),
        \   json_encode({
        \     'model': 'codellama',
        \     'created_at': '2024-09-20T23:25:06.675058548Z',
        \     'response': "\nAnd there is no\ndoubt about it",
        \     'done': v:true,
        \     'done_reason': 'stop',
        \     'total_duration': 7833808817,
        \     'load_duration': 10021098,
        \     'prompt_eval_count': 31,
        \     'prompt_eval_duration': 2122796000,
        \     'eval_count': 35,
        \     'eval_duration': 5658536000,
        \   }),
        \ ], separator)


  let configurations = {
        \   'select': {
        \     'model_name': 'codellama',
        \   },
        \ }

  let expected_configurations = deepcopy(configurations)

  let state = { 'messages': [] }

  let expected_state = {
        \   'messages': [
        \     {
        \       'model': 'codellama',
        \       'created_at': '2024-09-20T23:25:06.675058548Z',
        \       'done': v:true,
        \       'done_reason': 'stop',
        \       'context': v:null,
        \       'message': {
        \         'role': 'assistant',
        \         'content': "Vim is the best!\nAnd there is no\ndoubt about it",
        \         'images': v:null,
        \         'tool_calls': v:null,
        \       },
        \     },
        \   ],
        \ }

  call proompter#callback#channel#StreamToBuffer(
        \   api_response,
        \   configurations,
        \   state,
        \   '[Vader-workbench]',
        \ )

  AssertEqual state, expected_state
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
  AssertEqual getbufline(bufnr('[Vader-workbench]'), 0, '$')[-5:-3], split(expected_state.messages[-1].message.content, "\n")

Execute (proompter#callback#channel#StreamToBuffer -- Throws when status code is not in 200 range):
  let separator = "\r\n"

  let api_response = join([
        \   'HTTP/1.1 500 Internal Server Error',
        \   'Server: SimpleHTTP/0.6 Python/3.12.6',
        \ ], separator)

  let configurations = {
        \   'select': {
        \     'model_name': 'mistral',
        \   },
        \ }

  let expected_configurations = deepcopy(configurations)

  let state = { 'messages': [] }

  let expected_state = { 'messages': [ ] }

  AssertThrows call proompter#callback#channel#StreamToBuffer(
        \   g:api_response,
        \   g:configurations,
        \   g:state,
        \   '[Vader-workbench]',
        \ )

  AssertEqual g:vader_exception, 'HTTP response not okay -> 500 Internal Server Error'
  AssertEqual state, expected_state, 'Unexpected mutation of state'
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
" }}}
""

