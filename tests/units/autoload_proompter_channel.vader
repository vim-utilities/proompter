
""
" {{{
Execute (proompter#channel#CreateOptions -- Attaches default channel callback for streaming):
  let configurations = {
        \   'channel': {
        \     'address': '127.0.0.1:41968',
        \     'options': {},
        \   },
        \   'select': {
        \     'model_name': 'codellama',
        \   },
        \   'models': {
        \     'codellama': {
        \       'data': {
        \         'stream': v:true,
        \       },
        \     },
        \   },
        \ }

  let state = { 'messages': [] }

  let expected_configurations = deepcopy(configurations)
  let expected_state = deepcopy(state)

  let channel_options = proompter#channel#CreateOptions(configurations, state)

  Assert type(channel_options.callback), v:t_func
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
  AssertEqual state, expected_state, 'Unexpected mutation of state'

Execute (proompter#channel#CreateOptions -- Attaches default channel callback for non-streaming):
  let configurations = {
        \   'channel': {
        \     'address': '127.0.0.1:41968',
        \     'options': {},
        \   },
        \   'select': {
        \     'model_name': 'codellama',
        \   },
        \   'models': {
        \     'codellama': {
        \       'data': {
        \         'stream': v:false,
        \       },
        \     },
        \   },
        \ }

  let state = { 'messages': [] }

  let expected_configurations = deepcopy(configurations)
  let expected_state = deepcopy(state)

  let channel_options = proompter#channel#CreateOptions(configurations, state)

  Assert type(channel_options.callback), v:t_func
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
  AssertEqual state, expected_state, 'Unexpected mutation of state'

Execute (proompter#channel#CreateOptions -- Attaches custom channel callback when defined):
  let configurations = {
        \   'channel': {
        \     'address': '127.0.0.1:41968',
        \     'options': {
        \       'callback': { _channel, api_response ->
        \         proompter#callback#channel#StreamToHistory(api_response)
        \       }
        \     },
        \   },
        \   'select': {
        \     'model_name': 'codellama',
        \   },
        \   'models': {
        \     'codellama': {
        \       'data': {
        \         'stream': v:true,
        \       },
        \     },
        \   },
        \ }

  let state = { 'messages': [] }

  let expected_configurations = deepcopy(configurations)
  let expected_state = deepcopy(state)

  let channel_options = proompter#channel#CreateOptions(configurations, state)

  Assert type(channel_options.callback), v:t_func
  AssertEqual channel_options.callback, configurations.channel.options.callback
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
  AssertEqual state, expected_state, 'Unexpected mutation of state'
" }}}
""

""
" {{{
Execute (proompter#channel#GetOrSetOpen -- Creates a new channel when state is v:null):
  let configurations = {
        \   'channel': {
        \     'address': '127.0.0.1:41968',
        \     'options': {},
        \   },
        \   'select': {
        \     'model_name': 'codellama',
        \   },
        \   'models': {
        \     'codellama': {
        \       'data': {
        \         'stream': v:true,
        \       },
        \     },
        \   },
        \ }

  let state = {
        \   'messages': [],
        \   'channel': v:null,
        \ }

  let expected_configurations = deepcopy(configurations)
  let expected_state = deepcopy(state)

  let channel = proompter#channel#GetOrSetOpen(configurations, state)

  " Assert type(channel_options.callback), v:t_func
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
  AssertEqual state.messages, expected_state.messages, 'Unexpected mutation of state.messages'
  AssertEqual type(state.channel), v:t_channel
" }}}
""

