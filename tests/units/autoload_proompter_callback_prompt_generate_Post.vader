
""
" {{{
Execute (proompter#callback#prompt#generate#Post -- Is okay with empty data values for; 'preamble', 'context', and 'input'):
  let configurations = {}

  let state = {
        \   'messages': [
        \     {
        \       'model': 'codellama',
        \       'created_at': '2024-09-20T23:25:06.675058548Z',
        \       'done': v:true,
        \       'done_reason': 'stop',
        \       'message': {
        \         'role': 'assistant',
        \         'content': 'Vim is the best',
        \         'images': v:null,
        \       },
        \     },
        \   ],
        \ }

  let expected_configurations = deepcopy(configurations)
  let expected_state = deepcopy(state)

  call proompter#callback#prompt#generate#Post({
        \   'data': {
        \     'preamble': '',
        \     'context': '',
        \     'input': '',
        \   },
        \   'configurations': configurations,
        \   'state': state,
        \   'context_size': 0,
        \   'history_tags': { 'start': '<HISTORY>', 'end': '</HISTORY>'},
        \   'out_bufnr': '[Vader-workbench]',
        \ })

  AssertEqual state, expected_state, 'Unexpected mutation of state'
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'

Execute (proompter#callback#prompt#generate#Post -- Is okay with data values defined for; 'preamble', 'context', and 'input'):
  let configurations = {}

  let state = {
        \   'messages': [
        \     {
        \       'model': 'codellama',
        \       'created_at': '2024-09-20T23:25:06.675058548Z',
        \       'done': v:true,
        \       'done_reason': 'stop',
        \       'message': {
        \         'role': 'assistant',
        \         'content': 'Vim is the best',
        \         'images': v:null,
        \       },
        \     },
        \   ],
        \ }

  let expected_configurations = deepcopy(configurations)
  let expected_state = deepcopy(state)

  call proompter#callback#prompt#generate#Post({
        \   'data': {
        \     'preamble': 'Pretend you are a programming genius named Tom',
        \     'context': join([
        \       'Tom is the genius that created JDSL, pronounced Jay-Diesel.',
        \       'JDSL is a JSON based domain specific language, to configure building JavaScript source from SVN hashes.',
        \     ], "\n"),
        \     'input': 'Why is Tom a genius?',
        \   },
        \   'configurations': configurations,
        \   'state': state,
        \   'context_size': 0,
        \   'history_tags': { 'start': '<HISTORY>', 'end': '</HISTORY>'},
        \   'out_bufnr': '[Vader-workbench]',
        \ })

  AssertEqual state, expected_state, 'Unexpected mutation of state'
  AssertEqual configurations, expected_configurations, 'Unexpected mutation of configurations'
" }}}
